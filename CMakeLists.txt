# Brief: Builds firmware source generated by STM32CubeMX.
#
# Author:  Dawid Åšliwa. | https://github.com/Bulion
# License: MIT License. Contributions welcome.

cmake_minimum_required (VERSION 3.6)

set(PROJ "Robotel")
project(${PROJ})
enable_language(ASM)

if(GCC)
    set(LINKER_OPTION "-T")
    set(LINKER_SCRIPT_SUFFIX ".ld")
else()
    message(FATAL_ERROR "This project don't support provided toolchain!")
endif()

# All relative to project root, as generated by STM32CubeMX.
set(SOURCE_DIR ${CMAKE_SOURCE_DIR}/Src)
set(CMSIS_DIR ${CMAKE_SOURCE_DIR}/Drivers/CMSIS)
set(DEVICE_DIR ${CMAKE_SOURCE_DIR}/Drivers/CMSIS/Device/ST/STM32F0xx)
set(STARTUP_DIR ${CMAKE_SOURCE_DIR}/startup)
set(HAL_DIR ${CMAKE_SOURCE_DIR}/Drivers/STM32F0xx_HAL_Driver)

# Look here for header files.
include_directories(${CMAKE_SOURCE_DIR}/Inc)
include_directories(${CMSIS_DIR}/Include)
include_directories(${DEVICE_DIR}/Include)
include_directories(${HAL_DIR}/Inc)
include_directories(${HAL_DIR}/Inc)

# Get all sources
AUX_SOURCE_DIRECTORY(${HAL_DIR}/Src HAL_SOURCES)

add_executable(${PROJ}
    ${SOURCE_DIR}/adc.c
    ${SOURCE_DIR}/dma.c
    ${SOURCE_DIR}/encoder.cpp
    ${SOURCE_DIR}/gpio.c
    ${SOURCE_DIR}/i2c.c
    ${SOURCE_DIR}/kernel.cpp
    ${SOURCE_DIR}/main.cpp
    ${SOURCE_DIR}/stm32f0xx_hal_msp.c
    ${SOURCE_DIR}/stm32f0xx_it.c
    ${SOURCE_DIR}/sys.c
    ${SOURCE_DIR}/syscalls.c
    ${SOURCE_DIR}/system_stm32f0xx.c
    ${SOURCE_DIR}/tim.c
    ${SOURCE_DIR}/usart.c
    ${SOURCE_DIR}/ws2812.cpp
    ${STARTUP_DIR}/startup_stm32f091xc.s
    ${HAL_SOURCES}
)

set_target_properties(${PROJ} PROPERTIES SUFFIX ".elf")

target_compile_definitions(${PROJ} PUBLIC
    "__weak=__attribute__((weak))"
    "__packed=__attribute__((__packed__))"
    USE_HAL_DRIVER
    STM32F091xC
)

target_compile_options(${PROJ} PUBLIC
    $<$<COMPILE_LANGUAGE:CXX>:
        -std=c++14
    >
    -mcpu=cortex-m0
    -mthumb
    -mno-thumb-interwork
    -mfpu=vfp
    -msoft-float
    -Wall
    -ffunction-sections
    -fdata-sections
    -O0
)

set(LINKER_SCRIPT ${CMAKE_CURRENT_LIST_DIR}/STM32F091CBTx_FLASH${LINKER_SCRIPT_SUFFIX})

target_link_options(${PROJ} PUBLIC
    ${LINKER_OPTION} ${LINKER_SCRIPT}
    -specs=nano.specs
    -Wl,--gc-section
    -mcpu=cortex-m0
    -mthumb
)

# Generate assembly listing.
add_custom_command(
    TARGET ${PROJ}
    COMMAND "arm-none-eabi-objdump"
    ARGS "-S" "$<TARGET_FILE:${PROJ}>" ">>" "${PROJ}.lst"
)

if(CMAKE_HOST_WIN32)
    find_program(stm32programmer NAMES STM32_Programmer_CLI PATHS "C:/Program Files/STMicroelectronics/STM32Cube/STM32CubeProgrammer/bin/")
elseif (CMAKE_HOST_APPLE)
    find_program(stm32programmer NAMES STM32_Programmer.sh STM32_Programmer_CLI PATHS "/Applications/STMicroelectronics/STM32Cube/STM32CubeProgrammer/STM32CubeProgrammer.app/Contents/MacOs/bin")
else()
    find_program(stm32programmer NAMES STM32_Programmer.sh STM32_Programmer_CLI PATHS "/opt/STMicroelectronics/STM32Cube/STM32CubeProgrammer/")
endif()

# Flash firmware to target.
add_custom_target(flash
    ${stm32programmer} -c port=SWD -w "$<TARGET_FILE:${PROJ}>" -g
    DEPENDS ${PROJ})